version: '3.3'

services:
  db:
    image: postgres:11-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGPORT=${DB_PORT}
      - POSTGRES_USER=${DB_USER}
    restart: "on-failure"
  redis:
    container_name: 'redis'
    image: redis:alpine
    ports:
      - '6378:6379'
    volumes:
      - 'redisdata:/data'
    restart: "on-failure"
  memcached:
    container_name: 'memcached'
    image: 'memcached:latest'
    ports:
      - "11212:11211"
    restart: "on-failure"
  web:
    build: . #build the image for the web service from the dockerfile in parent directory
    ports:
      - "${APP_PORT}:${APP_PORT}"
    environment:
      - REDIS_HOST=redis
      - DB_HOST=db
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py check_db &&
                    python manage.py initiate_admin &&
                    python manage.py initiate_site &&
                    python manage.py collectstatic --noinput &&
                    python manage.py runserver 0.0.0.0:${APP_PORT}"
                    # gunicorn config.wsgi:application --bind 0.0.0.0:${APP_PORT}"
    volumes:
      - web-django:/home/app/credit_engine
      - web-static:/home/app/credit_engine/static
    env_file:
      - .env
    image: credit_engine

    expose:
      - ${APP_PORT}
    restart: "on-failure"
    depends_on:
      - db
      - redis
      - memcached

volumes:
  postgres_data:
  redisdata:
  web-django:
  web-static: