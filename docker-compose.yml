version: '3.7'

services:
  web:
    build: . #build the image for the web service from the dockerfile in parent directory
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py initiate_admin &&
                    python manage.py collectstatic --noinput &&
                    gunicorn config.wsgi:application --bind 0.0.0.0:${PORT}"
    volumes:
      - .:/creditengine:rw # map data and files from parent directory in host to creditengine directory in docker containe
      - static_volume:/app/static
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - DB_HOST=db
    image: sampleapp

    expose:
      - ${PORT}
    restart: "on-failure"
    depends_on:
      - db
  db:
    image: postgres:11-alpine
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGPORT=${DB_PORT}
      - POSTGRES_USER=${DB_USER}
    restart: "on-failure"
  redis:
    container_name: 'redis'
    image: redis:alpine
    ports:
      - '6378:6379'
    volumes:
      - 'redisdata:/data'
    restart: "on-failure"
  memcached:
    container_name: 'memcached'
    image: 'memcached:latest'
    ports:
      - "11212:11211"
    restart: "on-failure"


volumes:
  postgres_data:
  static_volume:
  redisdata: